openapi: 3.0.0
info:
  title: 'YetiForce API for Webservice App. Type: Mail'
  termsOfService: 'https://yetiforce.com/'
  contact:
    name: 'Devs API Team'
    url: 'https://yetiforce.com/'
    email: devs@yetiforce.com
  license:
    name: 'YetiForce Public License v3'
    url: 'https://yetiforce.com/en/yetiforce/license'
  version: '0.1'
paths:
  /webservice/Install:
    put:
      tags:
        - BaseAction
      summary: 'Action to check configuration and API connection test'
      operationId: 'Api\Mail\BaseAction\Install::put'
      parameters:
        -
          name: X-ENCRYPTED
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-ENCRYPTED'
      requestBody:
        description: 'Content of the request'
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InstallRequestBody'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InstallRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/InstallRequestBody'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstallResponseBody'
        '401':
          description: 'Invalid api key'
        '405':
          description: 'Invalid method'
      security:
        -
          basicAuth: ''
          ApiKeyAuth: ''
  /webservice/Users/Login:
    post:
      tags:
        - Users
      summary: 'Logs user into the system'
      operationId: 'Api\Mail\Users\Login::post'
      parameters:
        -
          name: X-ENCRYPTED
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-ENCRYPTED'
      requestBody:
        description: 'The data in different formats'
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsersLoginRequestBody'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsersLoginRequestBody'
          application/json:
            schema:
              $ref: '#/components/schemas/UsersLoginRequestBody'
      responses:
        '200':
          description: 'User details'
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/UsersLoginResponseBody'
            application/json:
              schema:
                $ref: '#/components/schemas/UsersLoginResponseBody'
            application/xml:
              schema:
                $ref: '#/components/schemas/UsersLoginResponseBody'
        '401':
          description: 'Invalid data access OR Invalid user password'
        '405':
          description: 'Invalid method'
      security:
        -
          basicAuth: ''
          ApiKeyAuth: ''
  /webservice/Users/Logout:
    put:
      tags:
        - Users
      summary: 'Logout user out the system'
      operationId: 'Api\Portal\Users\Logout::put'
      parameters:
        -
          name: X-ENCRYPTED
          in: header
          required: true
          schema:
            $ref: '#/components/schemas/X-ENCRYPTED'
      requestBody:
        description: 'The body of the request is empty'
        required: false
      responses:
        '200':
          description: 'Logout status'
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/UsersLogoutResponseBody'
            application/json:
              schema:
                $ref: '#/components/schemas/UsersLogoutResponseBody'
            application/xml:
              schema:
                $ref: '#/components/schemas/UsersLogoutResponseBody'
      security:
        -
          basicAuth: ''
          ApiKeyAuth: ''
          token: ''
components:
  schemas:
    X-ENCRYPTED:
      description: 'Is the content request is encrypted'
      type: string
      default: '0'
      enum:
        - '0'
        - '1'
    InstallRequestBody:
      title: 'Install request body'
      description: 'The body content is optional, if it is sent then the API will send it in response'
      type: object
    InstallResponseBody:
      title: 'Install response body'
      description: 'JSON data'
      properties:
        status:
          description: 'A numeric value of 0 or 1 that indicates whether the communication is valid. 1 - sukcess , 0 - error'
          type: integer
          enum:
            - '0'
            - '1'
        result:
          description: 'Content of responses from a given method'
          properties:
            serverTime:
              title: 'current time on the server'
              description: 'Put method.'
              type: string
              format: date-time
              example: '2019-10-09 11:41:40'
            tokenExist:
              title: 'Does the token exist in the header?'
              description: 'Put method.'
              type: boolean
            apiKey:
              title: 'api key sent in header'
              description: 'Put method.'
              type: string
            languages:
              title: 'List of languages available in the system'
              description: 'Put method.'
              type: object
            data:
              title: 'Data that was sent in the request'
              description: 'Put method.'
              type: object
          type: object
      type: object
    UsersLoginRequestBody:
      title: 'Users login request body'
      description: 'JSON or form-data'
      properties:
        userName:
          description: 'Webservice user name'
          type: string
        password:
          description: 'Webservice user password'
          type: string
        params:
          description: 'Additional parameters sent by the user, extending the current settings, e.g. language'
          type: array
          items:
            type: string
      type: object
    UsersLoginResponseBody:
      title: 'Users login response body'
      description: 'Users login response body'
      properties:
        status:
          description: 'A numeric value of 0 or 1 that indicates whether the communication is valid. 1 - sukcess , 0 - error'
          type: integer
          enum:
            - '0'
            - '1'
        result:
          description: 'Content of responses from a given method'
          properties:
            token:
              description: 'Post method.'
              type: string
              maxLength: 40
              minLength: 40
            name:
              title: '1111'
              description: '2222'
              type: string
            lastLoginTime:
              description: 'Post method.'
              type: string
              format: date-time
              example: '2019-10-07 08:32:38'
            lastLogoutTime:
              description: 'Post method.'
              type: string
              format: date-time
              example: 'null'
            language:
              description: 'Post method.'
              type: string
              example: pl-PL
            userDetails:
              description: 'Post method.'
              properties:
                hourFormat:
                  description: 'Post method.'
                  type: integer
                startHour:
                  description: 'Post method.'
                  type: string
                endHour:
                  description: 'Post method.'
                  type: string
                dateFormat:
                  description: 'Post method.'
                  type: string
                dateJsFormat:
                  description: 'Post method.'
                  type: string
                firstDayOfTheWeek:
                  description: 'Post method.'
                  type: string
                timeZone:
                  description: 'Post method.'
                  type: string
                currencyGroupingPattern:
                  description: 'Post method.'
                  type: string
                currencyDecimalSeparator:
                  description: 'Post method.'
                  type: string
                currencyGroupingSeparator:
                  description: 'Post method.'
                  type: string
                currencySymbolPlacement:
                  description: 'Post method.'
                  type: string
                noOfCurrencyDecimals:
                  description: 'Post method.'
                  type: integer
                truncateTrailingZeros:
                  description: 'Post method.'
                  type: integer
                currencyId:
                  description: 'Post method.'
                  type: integer
                currencyName:
                  description: 'Post method.'
                  type: string
                currencyCode:
                  description: 'Post method.'
                  type: string
                currencySymbol:
                  description: 'Post method.'
                  type: string
                conv_rate:
                  description: 'Post method.'
                  type: number
                  format: float
              type: object
          type: object
      type: object
    UsersLogoutResponseBody:
      title: 'Users logout response body'
      description: 'Logout status'
      properties:
        status:
          description: 'A numeric value of 0 or 1 that indicates whether the communication is valid. 1 - sukcess , 0 - error'
          type: integer
          enum:
            - '0'
            - '1'
        result:
          description: 'Content of responses from a given method'
          type: boolean
      type: object
  securitySchemes:
    basicAuth:
      type: http
      in: header
      scheme: basic
    ApiKeyAuth:
      type: apiKey
      description: 'Webservice api key'
      name: X-API-KEY
      in: header
    token:
      type: apiKey
      description: 'Webservice api token, generated when logging into the system, required for communication'
      name: X-TOKEN
      in: header
tags:
  -
    name: BaseAction
    description: 'Basic Webservice API methods'
  -
    name: Users
    description: 'Access to user methods'
